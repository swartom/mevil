METADATA {
string name = "cycle"; // Name of the generator
string description = "Generates the k-cycle for a given k as an input";
};

prim PROPERTY halting = invariant HALT;
prim PROPERTY fixed_memory_space = invariant MEMORYSPACE_FIXED;
prim integer k = input a1;


prim ALPHABET alphabet = A,L;
prim PARAMS formal_parameters = x,y;
prim AXIOM omega = A(1,recall k);


prim PRODUCTIONS p =
     rule_1: A(x,y) : x < y -> L(x+1)A(x)A(x+1,y),
     rule_2: A(x,y) : x = y -> L(1)A(x);

prim GENERATOR cycle = system(alphabet,formal_parameters,omega,p);

cycle validate halting;
cycle validate fixed_memory_space;

cycle{
    set VERTEX A a1;
    set EDGE L a1;
    set Y 0;
    on VERTEX {
        set Y a1;
    };
    on EDGE {
        set matrix a1 Y;
    };
};

return cycle matrix;
